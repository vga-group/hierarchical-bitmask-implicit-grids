#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_control_flow_attributes : enable

#include "rt_generic.glsl"
#include "math.glsl"

layout(location = 0) rayPayloadInEXT bounce_payload payload;

void main()
{
    point_light pl = point_lights.array[gl_InstanceCustomIndexEXT];
    if(pl.cutoff_angle_and_directional_falloff_exponent != 0)
    {
        vec3 pos = vec3(pl.pos_x, pl.pos_y, pl.pos_z);

        vec3 int_point = gl_WorldRayOriginEXT + gl_HitTEXT * gl_WorldRayDirectionEXT;
        float alpha = get_spotlight_cutoff(pl, normalize(pos - gl_WorldRayOriginEXT));
        if(alpha < generate_uniform_random(payload.seed))
            ignoreIntersectionEXT;
    }
}
